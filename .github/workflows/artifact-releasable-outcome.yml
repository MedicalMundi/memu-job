# see https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions

name: Buid releasable outcome

on:
  repository_dispatch:
    types: [commit-stage-was-completed-successfully]

env:
  GITHUB_PAT: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
  PHP_RELEASE_CANDIDATE_IMAGE_NAME: internal-php-rc

jobs:

  artifact-release-candidate:
    runs-on: ubuntu-18.04
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - run: sudo chown runner:docker /var/run/docker.sock
        if: ${{ env.ACT }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/medicalmundi/${{ env.PHP_RELEASE_CANDIDATE_IMAGE_NAME }}
            ghcr.io/medicalmundi/memu-job-rc
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to GHCR
        id: docker_ghrc_login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/php/Dockerfile
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: true
          load: false
          no-cache: false
          tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}


#      - name: Build image
#        #run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
#        run: docker build . --file docker/php/Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
#      - name: Log in to registry
#        # This is where you will update the PAT to GITHUB_TOKEN
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Push image
#        run: |
#          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
#
#          # Change all uppercase to lowercase
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#
#          # Strip git ref prefix from version
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#
#          # Strip "v" prefix from tag name
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#
#          # Use Docker `latest` tag convention
#          [ "$VERSION" == "master" ] && VERSION=latest
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$VERSION
#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
