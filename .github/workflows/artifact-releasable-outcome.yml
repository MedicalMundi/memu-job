# see https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions

name: Build releasable outcome

on:
  repository_dispatch:
    types: [commit-stage-was-completed-successfully]

env:
  GITHUB_PAT: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
  PHP_RELEASE_CANDIDATE_IMAGE_NAME: internal-php-rc
  TEST_TAG_PHP_RELEASE_CANDIDATE: medicalmundi/temp-test-rc-img:test

jobs:

  artifact-release-candidate:
    runs-on: ubuntu-18.04
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - run: sudo chown runner:docker /var/run/docker.sock
        if: ${{ env.ACT }}

      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/medicalmundi/${{ env.PHP_RELEASE_CANDIDATE_IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to GHCR
        id: docker_ghrc_login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Pre build image
        id: docker_pre_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/php/Dockerfile
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          load: true
          no-cache: false
          tags: ${{ env.TEST_TAG_PHP_RELEASE_CANDIDATE }}

      - name: Test image
        id: test-builded-image
        run: |
          docker run --rm ${{ env.TEST_TAG_PHP_RELEASE_CANDIDATE }} php -v
          docker run --rm ${{ env.TEST_TAG_PHP_RELEASE_CANDIDATE }} php -m
          docker run --rm ${{ env.TEST_TAG_PHP_RELEASE_CANDIDATE }} php -i

      - name: Test image as not root user
        id: test-builded-image-as-not-root-user
#        run: |
#          docker run -u medicalmundi --rm ${{ env.TEST_TAG_PHP_RELEASE_CANDIDATE }} ls -al /app
        run: |
          docker run -u application --rm ${{ env.TEST_TAG_PHP_RELEASE_CANDIDATE }} ls -al /app

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/php/Dockerfile
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: true
          load: false
          no-cache: false
          tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}
