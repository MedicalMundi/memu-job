# see https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/
#if: "!contains(github.event.head_commit.message, 'skip ci')"
#if: "!contains(github.event.*.message, 'skip ci or other text message')"

name: PHP edge

on:
  repository_dispatch:
    types: [commit-stage-was-completed-successfully]
    branches:
      - main

env:
  GITHUB_PAT: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
  COVERAGE: '0'
  PHP_EXTENSIONS: ctype, curl, gd, iconv, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
  PHP_EXTENSIONS_CACHE_KEY: cache-php-edge-extensions-v1

jobs:
  core-test:
    name: Core & Symfony tests (PHP ${{ matrix.php }})
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php:
          - '8.1'
          - '8.2'
      fail-fast: true

    steps:
      - uses: actions/checkout@v3

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.24.0
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Update project dependencies
        if: (startsWith(matrix.php, '8.2'))
        run: composer update -W --no-interaction --no-progress --ansi

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: Run Core Unit test suite
        run: ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite unit

      - name: Run Core Integration test suite
        run: ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite integration

      - name: Run Core Quarantine tests
        run: ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite unit,integration --group quarantine
        continue-on-error: true

      - name: Run webserver
        id: run_symfony_webserver
        run: symfony server:start --port=8080 --dir=public --daemon --no-tls

      - name: Run Symfony test
        run: ./vendor/bin/phpunit