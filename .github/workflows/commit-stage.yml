name: Commit stage

on: [ push ]


env:
  GITHUB_PAT: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
  REPORT_FOLDER_PHPUNIT: ${{ secrets.REPORT_FOLDER_PHPUNIT }}
  PHPUNIT_ARTIFACT_NAME: ${{ secrets.CI_ENV_PHPUNIT_ARTIFACT_NAME }}
  COVERAGE: '0'
  PHP_EXTENSIONS: ctype, curl, gd, iconv, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1


jobs:
  lint-composer:
    runs-on: ubuntu-18.04
    timeout-minutes: 5
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup php extension cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache PHP extensions
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer, composer-normalize:2.16.0

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php${{ matrix.php }}-composer-
        continue-on-error: true

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: Run composer validate
        run: composer validate --strict --ansi

      - name: Run composer normalize
        run: composer-normalize --dry-run --ansi


  coding-standard:
    if: "!contains(github.event.*.message, 'composer(deps')"
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi
          composer bin ecs install --no-progress --ansi

      - name: Run easy-coding-standard
        run: vendor/bin/ecs check --ansi


  architecture-check:
    if: "!contains(github.event.*.message, 'composer(deps')"
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress
          composer bin deptrac install

      - name: Run core analysis Context To Context
        run: vendor/bin/deptrac analyse core/depfile-core.yaml

      - name: Run core analysis Job Context
        run: vendor/bin/deptrac analyse core/depfile-publicjob.yaml

      - name: Run core analysis Errata Context
        run: vendor/bin/deptrac analyse core/depfile-errata.yaml

      - name: Run core analysis Analyzer Context
        run: vendor/bin/deptrac analyse core/depfile-analyzer.yaml


  phpstan:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi
          composer bin phpstan install

      - name: Run phpstan
        run: vendor/bin/phpstan --configuration=phpstan.neon --ansi


  psalm:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi
          composer bin psalm install --ansi

      - name: Run psalm
        run: vendor/bin/psalm --config=psalm.xml --diff --show-info=false --stats --threads=4


  core-test:
    runs-on: ubuntu-18.04
    services:
      pgsql:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: app_test
          POSTGRES_PASSWORD: ChangeMe
          POSTGRES_USER: symfony

        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: xdebug
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: Run Core Unit test suite
        id: phpunit-unit-test-suite
        run: |
          mkdir -p var/tools/phpunit/core
          mkdir -p $REPORT_FOLDER_PHPUNIT/artifact-data/
          ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite unit \
            --coverage-clover $REPORT_FOLDER_PHPUNIT/artifact-data/unit-test-clover.xml --log-junit $REPORT_FOLDER_PHPUNIT/artifact-data/unit-test-junit.xml

      - name: Setup Database for Integration tests (schema & migration)
        run: |
          php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
          php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
        env:
          DATABASE_URL: postgresql://symfony:ChangeMe@127.0.0.1:${{ job.services.pgsql.ports['5432'] }}/app_test

      - name: Run Core Integration test suite
        id: phpunit-integration-test-suite
        run:  |
          mkdir -p var/tools/phpunit/core
          mkdir -p $REPORT_FOLDER_PHPUNIT/artifact-data/
          ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite integration \
            --coverage-clover $REPORT_FOLDER_PHPUNIT/artifact-data/integration-test-clover.xml --log-junit $REPORT_FOLDER_PHPUNIT/artifact-data/integration-test-junit.xml

      - name: Run Core Quarantine tests
        run: ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite unit,integration --group quarantine
        continue-on-error: true

      - name: Save coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PHPUNIT_ARTIFACT_NAME }}-${{ env.GITHUB_SHA }}
          path: ${{ env.REPORT_FOLDER_PHPUNIT }}


  symfony-test:
    needs:
      - core-test
      - lint-symfony-container
      - lint-symfony-configuration
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: Run webserver
        run: symfony server:start --port=8080 --dir=public --daemon --no-tls

      - name: Run test suite
        run: ./vendor/bin/phpunit
        env:
          SYMFONY_DEPRECATIONS_HELPER: disabled


  lint-symfony-container:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: lint test container
        run: ./bin/console lint:container -e test --verbose

      - name: lint productiont container
        run: ./bin/console lint:container -e prod --verbose


  lint-symfony-configuration:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: lint symfony configuration
        run: ./bin/console lint:yaml config --parse-tags


  notifiy-commit-stage-was-completed-successfully:
    name: notifiy-commit-stage-was-completed-successfully
    needs:
      - lint-composer
      - coding-standard
      - architecture-check
      - phpstan
      - psalm
      - core-test
      - symfony-test
      - lint-symfony-container
      - lint-symfony-configuration
    runs-on: ubuntu-18.04
    steps:
      - name: emit pipeline event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
          repository: ${{ github.repository }}
          event-type: commit-stage-was-completed-successfully
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'


  notifiy-code-coverage-report-was-completed-successfully:
    name: notifiy-code-coverage-report-was-completed-successfully
    needs:
      - core-test

    runs-on: ubuntu-18.04
    steps:
      - name: emit pipeline event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
          repository: ${{ github.repository }}
          event-type: code-coverage-report-was-completed-successfully
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'