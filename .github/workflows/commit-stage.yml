name: Commit stage

on: [ push ]


env:
  GITHUB_PAT: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
  COVERAGE: '0'
  PHP_EXTENSIONS: ctype, curl, gd, iconv, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1

  COVERAGE_UNIT_ARTIFATC_NAME: 'Coverage-reports-unit-on-SHA'
  COVERAGE_CLOVER_UNIT_FILENAME: 'coverage-unit-test-clover.xml'
  COVERAGE_LOGJUNIT_UNIT_FILENAME: 'coverage-unit-test-junit.xml'

jobs:
  lint-composer:
    name: Validate composer
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup php extension cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache PHP extensions
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer, composer-normalize:2.16.0

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php${{ matrix.php }}-composer-
        continue-on-error: true

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-scripts --ansi

      - name: Run composer validate
        run: composer validate --strict --ansi

      - name: Run composer normalize
        run: composer-normalize --dry-run --ansi


  coding-standard:
    name: Coding Standard
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi
          composer bin ecs install --no-progress --ansi

      - name: Run easy-coding-standard
        run: vendor/bin/ecs check --ansi


  architecture-check:
    name: Architecture Checks
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress
          composer bin deptrac install

      - name: Run core analysis Context To Context
        run: vendor/bin/deptrac analyse core/depfile-core.yaml

      - name: Run core analysis Job Context
        run: vendor/bin/deptrac analyse core/depfile-publicjob.yaml

      - name: Run core analysis Errata Context
        run: vendor/bin/deptrac analyse core/depfile-errata.yaml

      - name: Run core analysis Analyzer Context
        run: vendor/bin/deptrac analyse core/depfile-analyzer.yaml


  phpstan:
    name: SA (phpstan)
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi
          composer bin phpstan install

      - name: Run phpstan
        run: vendor/bin/phpstan --configuration=phpstan.neon --ansi


  psalm:
    name: SA (psalm)
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --ansi
          composer bin psalm install --ansi

      - name: Run psalm
        run: vendor/bin/psalm --config=psalm.xml --diff --show-info=false --stats --threads=4 --no-cache


  core-test:
    name: Unit test (core)
    runs-on: ubuntu-18.04
    timeout-minutes: 5
    services:
      pgsql:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: ci-db_test
          POSTGRES_PASSWORD: ci-db-password
          POSTGRES_USER: ci-db-user
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: xdebug
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-scripts --ansi

      - name: Run Core Unit test suite
        id: phpunit-unit-test-suite
        run: |
          ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite unit \
          --coverage-clover $COVERAGE_CLOVER_UNIT_FILENAME \
          --log-junit $COVERAGE_LOGJUNIT_UNIT_FILENAME
        env:
          SYMFONY_DEPRECATIONS_HELPER: disabled

      - name: Run Core Quarantine tests
        run: ./vendor/bin/phpunit --configuration phpunit.core.xml --testsuite unit,integration --group quarantine
        continue-on-error: true

      - name: Get Coverage artifact name
        id: coverage-artifact-name
        run: echo "::set-output name=name::$COVERAGE_UNIT_ARTIFATC_NAME-$GITHUB_SHA"

      - name: Save coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.coverage-artifact-name.outputs.name }}
          path: |
            ${{ env.COVERAGE_CLOVER_UNIT_FILENAME }}
            ${{ env.COVERAGE_LOGJUNIT_UNIT_FILENAME }}
            

  notifiy-commit-stage-was-completed-successfully:
    name: notifiy-commit-stage-was-completed-successfully
    needs:
      - lint-composer
      - coding-standard
      - architecture-check
      - phpstan
      - psalm
      - core-test
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

      - name: emit pipeline event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
          repository: ${{ github.repository }}
          event-type: commit-stage-was-completed-successfully
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "ref_name": "${{ github.ref_name }}", "commit_message": "${{ github.event.head_commit.message }}"}'


  notifiy-coverage-report-was-ready:
    name: notifiy-coverage-report-was-ready
    needs:
      - core-test
    timeout-minutes: 3
    runs-on: ubuntu-18.04
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

      - name: emit pipeline event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.MEMUJOB_CI_GHA_PAT }}
          repository: ${{ github.repository }}
          event-type: coverage-report-was-ready
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "ref_name": "${{ github.ref_name }}"}'
        env:
          GITHUB_TOKEN: ${{ secrets.MEMUJOB_CI_GHA_PAT }}