name: Deployment on Production

on:
  push:
    branches:
      - main
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      triggering-sha:
        required: true
        type: string


jobs:
  production-deployment:
    name: Production deployment
    runs-on: ubuntu-latest
    environment: av-production
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4

#      - name: Checkout on SHA-${{ inputs.triggering-sha }}
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.32.0
        with:
          php-version: 8.1

      - name: Install dependencies
        run: |
          APP_ENV=prod composer install --no-dev --prefer-dist --no-progress --ansi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          #node-version: "${{ matrix.node }}"
          node-version: 16

      - name: Get Yarn cache directory
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache Yarn
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-

      - name: Install JS dependencies
        run: yarn install

      - name: Build assets (ckeditor)
        run: |
          bin/console ckeditor:install -e prod --clear=keep --exclude=samples --no-interaction

      - name: Build assets (symfony assets)
        run: |
          bin/console assets:install public -vvv -e prod

      - name: Build assets (js files - webpack)
        run: |
          yarn run encore production

      - name: Delete local symfony cache and log
        run: |
          rm -fr var/

      - name: Prepare prod container
        run: |
          ./bin/console lint:container -e prod --ansi

      - name: Overwrite Production env file
        uses: DamianReeves/write-file-action@master
        with:
          path: .env
          write-mode: overwrite
          contents: |
            # generated by github-action workflow
            APP_ENV=prod
            APP_SECRET=${{ secrets.APP_SECRET }}
            APP_MAINTENANCE_MODE=${{ secrets.APP_MAINTENANCE_MODE }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        timeout-minutes: 120 # first deploy
        #timeout-minutes: 60
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftp
          dry-run: false
          exclude: |
            **/.git*
            **/.git*/**
            **/.env.test
            **/.eslintrc.js
            **/Makefile
            **/babel.config.js
            **/behat.yml.dist
            **/docker-compose.**
            **/dockerhub.makefile
            **/ecs.php
            **/package.json
            **/phpstan-baseline.neon
            **/phpstan.neon
            **/phpunit.core.xml
            **/phpunit.xml.dist
            
            **/docker/**
            **/docs/**
            **/drivers/**
            **/features/**
            **/node_modules/**
            **/sys/**
            **/tests/**
            **/tools/**
            **/var/log/**
            
            **/core/backoffice/tests/**
            **/core/ingesting/tests/**
            **/core/publishing/tests/**
            **depfile-*

            .env.altervista*

      # ACTION RIMOSSA [wei/curl] NON ESISTE
      # An action could not be found at the URI 'https://api.github.com/repos/wei/curl/tarball
#      - name: Cache clear on remote server
#        uses: wei/curl@master
#        with:
#          args: --insecure -I https://medicaljob.altervista.org/command/cache/clear

      - name: Cache clear on remote server
        uses: indiesdev/curl@v1.1
        with:
          url: https://medicaljob.altervista.org/command/cache/clear
          method: "GET"
          accept: 200
          timeout: 30000
          retries: 3
          log-response: true

      # ACTION RIMOSSA [wei/curl] NON ESISTE
      # An action could not be found at the URI 'https://api.github.com/repos/wei/curl/tarball
#      - name: Run database migration on remote server
#        uses: wei/curl@master
#        with:
#          args: --insecure -I https://medicaljob.altervista.org/command/db/migrate

      - name: Run database migration on remote server
        uses: indiesdev/curl@v1.1
        with:
          url: https://medicaljob.altervista.org/command/db/migrate
          method: "GET"
          accept: 200
          timeout: 30000
          retries: 3
          log-response: true
