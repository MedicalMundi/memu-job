<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.14.1@b9d355e0829c397b9b3b47d0c0ed042a8a70284d">
  <file src="core/backoffice/src/Adapter/HttpWeb/Ingesting/IngestingController.php">
    <InternalMethod>
      <code>get</code>
    </InternalMethod>
  </file>
  <file src="core/ingesting/src/Errata/Adapter/Persistence/Doctrine/Config/ErrataIdType.php">
    <ImplementedReturnTypeMismatch>
      <code>?ErrataId</code>
    </ImplementedReturnTypeMismatch>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="core/ingesting/src/Errata/Adapter/Persistence/InMemoryErrataFeedRepository.php">
    <MixedInferredReturnType>
      <code>ErrataFeed</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->items[$errataId->toString()]]]></code>
    </MixedReturnStatement>
  </file>
  <file src="core/ingesting/src/Errata/Adapter/Rss/FeedIoRssReader.php">
    <DeprecatedClass>
      <code>Factory::create()</code>
      <code>Factory::create()</code>
    </DeprecatedClass>
    <InvalidArrayAccess>
      <code><![CDATA[$item->getAllElements()[0]]]></code>
    </InvalidArrayAccess>
    <MixedArgument>
      <code><![CDATA[($item->getAllElements()[0])->getValue()]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code>getValue</code>
    </MixedMethodCall>
    <PossiblyNullArgument>
      <code><![CDATA[$item->getLink()]]></code>
      <code><![CDATA[$item->getTitle()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>format</code>
    </PossiblyNullReference>
  </file>
  <file src="core/ingesting/src/Errata/Adapter/Rss/RssDataItem.php">
    <MissingConstructor>
      <code>$description</code>
      <code>$link</code>
      <code>$publicationDate</code>
      <code>$title</code>
    </MissingConstructor>
  </file>
  <file src="core/ingesting/src/Errata/Application/Model/ErrataFeed.php">
    <PropertyNotSetInConstructor>
      <code>$description</code>
      <code>$link</code>
      <code>$publicationDate</code>
      <code>$title</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="core/ingesting/src/Errata/Infrastructure/ServiceContainer.php">
    <DeprecatedClass>
      <code>Factory::create()</code>
    </DeprecatedClass>
  </file>
  <file src="core/ingesting/src/PublicJob/Adapter/Persistence/Doctrine/Config/JobIdType.php">
    <ImplementedReturnTypeMismatch>
      <code>?JobId</code>
    </ImplementedReturnTypeMismatch>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="core/ingesting/src/PublicJob/Adapter/Persistence/InMemoryJobFeedRepository.php">
    <MixedAssignment>
      <code>$jobFeed</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>JobFeed</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>link</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->items[$jobId->toString()]]]></code>
    </MixedReturnStatement>
  </file>
  <file src="core/ingesting/src/PublicJob/Adapter/Rss/FeedIoRssReader.php">
    <DeprecatedClass>
      <code>Factory::create()</code>
      <code>Factory::create()</code>
    </DeprecatedClass>
    <InvalidArrayAccess>
      <code><![CDATA[$item->getAllElements()[0]]]></code>
    </InvalidArrayAccess>
    <MixedArgument>
      <code><![CDATA[($item->getAllElements()[0])->getValue()]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code>getValue</code>
    </MixedMethodCall>
  </file>
  <file src="core/ingesting/src/PublicJob/Application/Model/JobFeed.php">
    <PropertyNotSetInConstructor>
      <code>$description</code>
      <code>$link</code>
      <code>$publicationDate</code>
      <code>$title</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="core/ingesting/src/PublicJob/Infrastructure/ServiceContainer.php">
    <DeprecatedClass>
      <code>Factory::create()</code>
      <code>Factory::create()</code>
    </DeprecatedClass>
  </file>
  <file src="core/ingesting/src/SharedKernel/Infrastructure/FeedIoAdapter/GazzettaClient.php">
    <MixedArgument>
      <code>$psrResponse</code>
      <code>$psrResponse</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$psrResponse</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getStatusCode</code>
      <code>request</code>
    </MixedMethodCall>
  </file>
  <file src="core/ingesting/src/SharedKernel/Infrastructure/FeedIoAdapter/Response.php">
    <InvalidArrayAccess>
      <code><![CDATA[$this->getHeader(static::HTTP_LAST_MODIFIED)[0]]]></code>
    </InvalidArrayAccess>
    <MixedArgument>
      <code><![CDATA[$this->getHeader(static::HTTP_LAST_MODIFIED)[0]]]></code>
      <code>static::HTTP_LAST_MODIFIED</code>
    </MixedArgument>
    <MixedInferredReturnType>
      <code>iterable</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->psrResponse->getHeader($name)]]></code>
    </MixedReturnStatement>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getBody()]]></code>
    </PossiblyNullArgument>
    <UndefinedInterfaceMethod>
      <code>getHeader</code>
      <code>hasHeader</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="core/ingesting/tests/Errata/Integration/Infrastructure/ProductionServiceContainerTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->errataFeedRepository]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="core/ingesting/tests/Errata/Integration/Persistence/DoctrineErrataFeedRepositoryTest.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->doctrineErrataFeedRepository]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>ErrataFeedRepository</code>
    </MoreSpecificReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->doctrineErrataFeedRepository]]></code>
    </NullableReturnStatement>
  </file>
  <file src="core/ingesting/tests/PublicJob/Integration/AclAdapter/DistributableJobFeedRepositoryTest.php">
    <PossiblyNullReference>
      <code>close</code>
    </PossiblyNullReference>
  </file>
  <file src="core/ingesting/tests/PublicJob/Integration/Infrastructure/PublicJobProductionServiceContainerTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->jobRepository]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="core/ingesting/tests/SharedKernel/Integration/FeedIoGazzettaAdapterTest.php">
    <InternalMethod>
      <code>doesNotPerformAssertions</code>
    </InternalMethod>
    <UnusedMethodCall>
      <code>doesNotPerformAssertions</code>
    </UnusedMethodCall>
  </file>
  <file src="core/publishing/src/Cms/Adapter/HttpWeb/ConcorsoArticleController.php">
    <InternalMethod>
      <code>get</code>
      <code>get</code>
      <code>get</code>
    </InternalMethod>
    <PossiblyNullArgument>
      <code>$concorsoArticle</code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getId</code>
    </PossiblyNullReference>
  </file>
  <file src="core/publishing/src/Cms/Adapter/HttpWeb/Form/ConcorsoArticleType.php">
    <MissingTemplateParam>
      <code>ConcorsoArticleType</code>
    </MissingTemplateParam>
  </file>
  <file src="core/publishing/src/Cms/Adapter/HttpWeb/Form/JobArticleType.php">
    <MissingTemplateParam>
      <code>JobArticleType</code>
    </MissingTemplateParam>
  </file>
  <file src="core/publishing/src/Cms/Adapter/HttpWeb/JobArticleController.php">
    <InvalidOperand>
      <code><![CDATA[$jobArticle->getId()]]></code>
    </InvalidOperand>
    <PossiblyNullOperand>
      <code><![CDATA[$jobArticle->getId()]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="core/publishing/src/Cms/Adapter/Persistence/DoctrineType/ConcorsoArticleIdType.php">
    <ImplementedReturnTypeMismatch>
      <code>?ConcorsoArticleId</code>
    </ImplementedReturnTypeMismatch>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="core/publishing/src/Cms/Application/Model/Article/Article.php">
    <MissingConstructor>
      <code>$id</code>
      <code>$title</code>
    </MissingConstructor>
  </file>
  <file src="core/publishing/src/Cms/Application/Model/JobArticle/JobArticle.php">
    <MissingPropertyType>
      <code>$id</code>
    </MissingPropertyType>
    <MixedInferredReturnType>
      <code>?int</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->id]]></code>
    </MixedReturnStatement>
  </file>
  <file src="core/publishing/tests/Cms/Functional/ConcorsoArticleControllerTest.php">
    <PropertyTypeCoercion>
      <code><![CDATA[(static::getContainer()->get('doctrine'))->getRepository(ConcorsoArticle::class)]]></code>
    </PropertyTypeCoercion>
    <UndefinedInterfaceMethod>
      <code>remove</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="core/publishing/tests/Cms/Functional/JobArticleControllerTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$fixture->getId()]]></code>
      <code><![CDATA[$fixture->getId()]]></code>
      <code><![CDATA[$fixture->getId()]]></code>
    </PossiblyNullArgument>
    <PropertyTypeCoercion>
      <code><![CDATA[(static::getContainer()->get('doctrine'))->getRepository(JobArticle::class)]]></code>
    </PropertyTypeCoercion>
    <UndefinedInterfaceMethod>
      <code>remove</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="core/publishing/tests/Cms/Integration/Adapter/Persistence/ConcorsoArticleRepositoryTest.php">
    <PossiblyNullArgument>
      <code>$concorsoArticleFromDB</code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getTitle</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code><![CDATA[(static::getContainer()->get('doctrine'))->getRepository(ConcorsoArticle::class)]]></code>
    </PropertyTypeCoercion>
    <UndefinedInterfaceMethod>
      <code>remove</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Controller/SymfonyCliController.php">
    <UnusedParam>
      <code>$options</code>
    </UnusedParam>
  </file>
  <file src="src/Entity/BackofficeUser.php">
    <MixedReturnTypeCoercion>
      <code>array</code>
      <code>array_unique($roles)</code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="tests/E2E/Front/HomeTest.php">
    <PossiblyNullReference>
      <code>request</code>
    </PossiblyNullReference>
  </file>
</files>
